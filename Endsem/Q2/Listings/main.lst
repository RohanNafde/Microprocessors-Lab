C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2023 17:12:18 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "mcp3008.h"  //Driver for interfacing ADC ic MCP3008
   3          #include "serial.c"   
   4          
   5          char state, temp;
   6          int quant, index;
   7          char board_name[4][10] = {"8051", "TIVA-C", "Atmega328p", "STM32"};
   8          char disp1[7] = "8051-x ";
   9          char disp2[7] = "TIVA-x ";
  10          char disp3[8] = "AT328-x ";
  11          char disp4[8] = "STM32-x ";
  12          int quantity[4] = {8, 6, 4, 4};
  13          int quantity_max[4] = {8, 6, 4, 4};
  14          
  15          void initialize()
  16          {
  17   1        transmit_string("Micro-controllers available: ");
  18   1        
  19   1        disp1[5] = quantity[0] + 48;
  20   1        disp2[5] = quantity[1] + 48;
  21   1        disp3[6] = quantity[2] + 48;
  22   1        disp4[6] = quantity[3] + 48;
  23   1        
  24   1        transmit_string(disp1);
  25   1        transmit_string(disp2);
  26   1        transmit_string(disp3);
  27   1        transmit_string(disp4);
  28   1        
  29   1        transmit_string("\r\n");
  30   1        transmit_string("Press I for Issue and R for Return");
  31   1        transmit_string("\r\n");
  32   1        state = receive_char();
  33   1      }
  34          
  35          void Issue()
  36          {
  37   1        transmit_string("Enter micro-controller to be borrowed:");
  38   1        transmit_string("\r\n");
  39   1        temp = receive_char();
  40   1        index = temp - 49;
  41   1        
  42   1        transmit_string("Enter Quantity:");
  43   1        transmit_string("\r\n");
  44   1        temp = receive_char();
  45   1        quant = temp - 48;
  46   1        
  47   1        if(quantity[index] >= quant)
  48   1        {
  49   2          transmit_string("Requested micro-controller allocated!");
  50   2        transmit_string("\r\n");
  51   2          quantity[index] = quantity[index] - quant;
  52   2        }
  53   1        else
  54   1        {
C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2023 17:12:18 PAGE 2   

  55   2          transmit_string("Requested micro-controller not available...");
  56   2          transmit_string("\r\n");
  57   2        }
  58   1      }
  59          
  60          void Return()
  61          {
  62   1        transmit_string("Enter micro-controller to be returned:");
  63   1        transmit_string("\r\n");
  64   1        temp = receive_char();
  65   1        index = temp - 49;
  66   1        
  67   1        if(quantity[index] == quantity_max[index])
  68   1          transmit_string("You can't return what you don't have...");
  69   1        
  70   1        else
  71   1        {
  72   2          transmit_string("Enter Quantity:");
  73   2          transmit_string("\r\n");
  74   2          temp = receive_char();
  75   2          quant = temp - 48;
  76   2          
  77   2          if(quantity_max[index] >= quantity[index] + quant)
  78   2          {
  79   3            transmit_string("Returned micro-controller received!");
  80   3            transmit_string("\r\n");
  81   3            quantity[index] = quantity[index] + quant;
  82   3          }
  83   2          else
  84   2          {
  85   3            transmit_string("Returned micro-controller out of bounds...");
  86   3            transmit_string("\r\n");
  87   3          }
  88   2        }
  89   1      }
  90          
  91          void main(void)
  92          {
  93   1        spi_init();                                         
  94   1        uart_init();
  95   1        while(1)
  96   1        {
  97   2          initialize();
  98   2          if (state == 'I' || state == 'i')
  99   2            Issue();
 100   2          if (state == 'R' || state == 'r')
 101   2            Return();
 102   2        }
 103   1      }
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    782    ----
   CONSTANT SIZE    =    363    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     93      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
