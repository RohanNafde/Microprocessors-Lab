C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2023 14:30:11 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          char password[] = "15A8*D6#";
   5          char char_data[4][4]= {"123A","456B","789C","*0#D"};
   6          char input[8];
   7          int i, column ,row ,access;
   8          
   9          void display(char str1[], char str2[]);
  10          char keypress();
  11          
  12          void display(char str1[], char str2[])
  13          {
  14   1        lcd_cmd(0x01);
  15   1        lcd_cmd(0x80);
  16   1        msdelay(4);
  17   1        lcd_write_string(str1);
  18   1        lcd_cmd(0xC0);
  19   1        msdelay(4);
  20   1        lcd_write_string(str2);
  21   1      }
  22          
  23          int row_value()
  24          {
  25   1        P3 = 0xEF;
  26   1        if((P3 & 15) != 15)
  27   1          return 0;
  28   1        P3 = P3 - 0x10;
  29   1        if((P3 & 15) != 15)
  30   1          return 1;
  31   1        P3 = P3 - 0x20;
  32   1        if((P3 & 15) != 15)
  33   1          return 2;
  34   1        P3 = P3 - 0x40;
  35   1        if((P3 & 15) != 15)
  36   1          return 3;
  37   1      }
  38          
  39          int column_value()
  40          {
  41   1        if(P3 == 7)
  42   1          return 0;
  43   1        else if(P3 == 11)
  44   1          return 1;
  45   1        else if(P3 == 13)
  46   1          return 2;
  47   1        else if(P3 == 14)
  48   1          return 3;
  49   1      }
  50          
  51          char keypress()
  52          {
  53   1        //take input with 20ms debounce
  54   1        start:
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2023 14:30:11 PAGE 2   

  55   1        P3 = P3 & 15; //to check last nibble
  56   1        while(P3 != 15){} //previous input still there
  57   1        while(P3 == 15){} //no input given
  58   1        msdelay(20); //debounce delay
  59   1        if(P3 == 15)
  60   1          goto start; //go to start if no input after debounce
  61   1            
  62   1        //determine column
  63   1        column = column_value();
  64   1        
  65   1        //determine row
  66   1        row = row_value();
  67   1        
  68   1        return char_data[row][column];
  69   1      }
  70          
  71          void main()
  72          {
  73   1        again:
  74   1        //initialise
  75   1        lcd_init();
  76   1        access = 1;
  77   1        display("Enter Password:", "");
  78   1        //bring cursor to second line
  79   1        lcd_cmd(0xC0);
  80   1        
  81   1        //loop to check password and display entered password on LCD
  82   1        for(i=0; i<8; i++)
  83   1        {
  84   2          //take input
  85   2          P3 = 0x0F;
  86   2          input[i] = keypress();
  87   2          
  88   2          //check with that character of password
  89   2          if(input[i] != password[i])
  90   2            access = 0;
  91   2          
  92   2          //update character on LCD 2nd line
  93   2          lcd_write_char(input[i]);
  94   2          lcd_cmd(0x06);
  95   2          msdelay(4);
  96   2        }
  97   1        msdelay(1000);
  98   1        
  99   1        //display if access granted or not
 100   1        if(access == 1)
 101   1          display("Correct Password", "Access Granted");
 102   1        else
 103   1          display("Wrong Password", "Access Denied");
 104   1        msdelay(3000);
 105   1        goto again;
 106   1      }
*** WARNING C291 IN LINE 37 OF main.c: not every exit path returns a value
*** WARNING C291 IN LINE 49 OF main.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    536    ----
   CONSTANT SIZE    =     78    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     41       9
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2023 14:30:11 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
